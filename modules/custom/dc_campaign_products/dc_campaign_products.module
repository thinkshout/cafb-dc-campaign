<?php
/**
 * @file
 * Code for the RedHen Raiser donations additions feature.
 */

/**
 * Implements hook_form_alter().
 *
 */
function dc_campaign_products_form_alter(&$form, &$form_state, $form_id) {
  try {
    if ($form_id == 'redhen_donation_form') {
      $donation = $form_state['donation'];
      if (!isset($form_state['#donation_settings'])) {
        $form_state['donation_settings']
          = $settings
          = redhen_donation_entity_settings(
          $donation->entity_type,
          $donation->entity_id,
          TRUE
        );
      }
      $campaign = entity_load_single('redhen_campaign', $donation->entity_id);
      $campaign_wrapper = entity_metadata_wrapper('redhen_campaign', $campaign);
      if (!empty($campaign_wrapper->field_product->product_id)) {
        $product_id = $campaign_wrapper->field_product->product_id->value();
        $form_state['product_id'] = $product_id;
        $product = commerce_product_load($product_id);
        $wrapper = entity_metadata_wrapper('commerce_product', $product);
        $description = $wrapper->field_product_description->value();
        $image_uri = $wrapper->field_product_image->file->value()->uri;
        $form['product_group'] = array(
          '#title' => '',
          '#type' => 'fieldset',
          '#attributes' => array(
            'id' => array('product-group'),
          ),
        );
        $form['product_group']['product_title'] = array(
          '#markup' => t('Add a ' . $product->title . t(' purchase')),
        );
        $form['product_group']['product_description'] = array(
          '#markup' => $description,
          );
        $form['product_group']['product_image'] = array(
          '#markup' => theme('image_style', array(
            'path' => $image_uri,
            'style_name' => 'teaser_image'
          ))
        );

        $price = commerce_product_calculate_sell_price($product);
        $price_display = commerce_currency_format($price['amount'], $price['currency_code']);
        $price_markup = '<div class="form-item form-type-custom form-item-product-price">'
                      . '<label for="product-price">' . t('Price:') . '</label>'
                      . '<div id="product-price">' . $price_display . '</div></div>';


        $form['product_group']['price'] = array(
          '#markup' => $price_markup,
          '#prefix' => '<div class="container-inline">',
          '#suffix' => '</div>',

          );
        $form['product_group']['quantity'] = array(
          '#type' => 'textfield',
          '#title' => t('Quantity'),
          '#size' => 4,
          '#required' => FALSE,
          '#prefix' => '<div class="container-inline">',
          '#suffix' => '</div>',
        );

          $form['#validate'][] = 'dc_campaign_products_form_validate';
        }
    }
  }
  catch (exception $e) {
    dpm($e);
  }
}

function dc_campaign_products_form_validate($form, &$form_state) {

  // The select__or_other module does something funny with checkboxes where it places the other text into an array. So, lets fix that.
  if (!empty($form_state['values']['donation_add'])) {

    // Avoid a strict warning with array shift.
    $additional_donation_value = array_values($form_state['values']['donation_add']);
    $additional_donation = array_shift($additional_donation_value);
    if (is_numeric($additional_donation) && $additional_donation > 0) {
      $form_state['values']['donation_add'] = commerce_currency_decimal_to_amount($additional_donation, $form_state['currency']);
    }
    else {
      form_set_error('donation_add', t('The additional donation must be entered as a positive number.'));
    }
  }
  else {
    $form_state['values']['donation_add'] = 0;
  }
}

/*
 * This relies on a hook in redhen donation that doesn't exist yet.
 */
function dc_campaign_products_redhen_order_alter(&$form, &$form_state, &$order_wrapper) {

  $values = $form_state['values'];
  $donation = $form_state['donation'];
  $donation_type = redhen_donation_type_load($donation->bundle());
  $product_id = $form_state['product_id'];
  $order = $order_wrapper->value();
  $product = commerce_product_load($product_id);
  $price = commerce_product_calculate_sell_price($product);
  $order_id = $order->order_id;
  $line_item_type
    = isset($donation_type->settings['commerce_settings']['line_item_type']) ?
    $donation_type->settings['commerce_settings']['line_item_type'] :
    'product';

  if (isset($form_state['values']['quantity']) && !empty($form_state['values']['quantity'])) {
    $line_item = commerce_product_line_item_new($product, $product_id, $order_id, array(), $line_item_type);
    field_attach_submit('commerce_line_item', $line_item, $form['line_item'], $form_state);
    $donation_amount = $form_state['values']['quantity'] * $price['amount'];
    $currency = $form_state['currency'];

    redhen_donation_update_line_item_price($line_item, $donation_amount, $currency);

    // Save the line item to get the ID.
    commerce_line_item_save($line_item);

    // Add the item to the list of line items.
    $order_wrapper->commerce_line_items[] = $line_item;
  }
}